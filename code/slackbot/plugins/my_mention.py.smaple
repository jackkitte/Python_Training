# -*- coding: utf-8 -*-

from slackbot.bot import respond_to, listen_to, default_reply
import requests as rq
import json
from botmessage import botsend, botreply 

# @respond_to('string')     bot宛のメッセージ
#                           stringは正規表現が可能 「r'string'」
# @listen_to('string')      チャンネル内のbot宛以外の投稿
#                           @botname: では反応しないことに注意
#                           他の人へのメンションでは反応する
#                           正規表現可能
# @default_reply()          DEFAULT_REPLY と同じ働き
#                           正規表現を指定すると、他のデコーダにヒットせず、
#                           正規表現にマッチするときに反応
#                           ・・・なのだが、正規表現を指定するとエラーになる？
# message.reply('string')   @発言者名: string でメッセージを送信
# message.send('string')    string を送信
# message.react('icon_emoji')  発言者のメッセージにリアクション(スタンプ)する
#                               文字列中に':'はいらない

@respond_to("メンション")
def mention_func(message):
    botreply(message, "私にメンションと言ってどうするのだ")

@listen_to("リッスン")
def listen_func(message):
    botsend(message, "誰かがリッスンと投稿したようだ")
    botreply(message, "君だね？")

# docomo API

@default_reply(matchstr="(.*)")
@listen_to("(.*)")
def dialogue(message, input_text):
    url = "https://api.apigw.smt.docomo.ne.jp/dialogue/v1/dialogue?APIKEY=6a6167665363626f454b7a475272454c4d73634e5a783857744a654d64386445514e4a76517847384a6e35"
    headers = {"Content-type": "application/json"}
    data = {
            "utt": input_text,
            "mode": "dialog",
            "place": "東京"
            }
    rs = rq.post(url, data=json.dumps(data), headers=headers).json()
    botreply(message, rs.get("utt"))

